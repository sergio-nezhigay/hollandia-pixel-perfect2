{{ 'addon-products-block.css' | asset_url | stylesheet_tag }}

{% assign addon_products_handles = product.metafields.custom.add_on_products %}
{% assign addon_products_list = null %}

{% if addon_products_handles %}
  {% if addon_products_handles.value %}
    {% assign addon_products_list = addon_products_handles.value %}
  {% else %}
    {% assign addon_products_list = addon_products_handles %}
  {% endif %}
{% endif %}

{% unless addon_products_list and addon_products_list.size > 0 %}
  {% assign test_products = collections.all.products | limit: 3 %}
  {% assign addon_products_list = '' %}
  {% for test_product in test_products %}
    {% if forloop.first %}
      {% assign addon_products_list = test_product.handle %}
    {% else %}
      {% assign addon_products_list = addon_products_list | append: ',' | append: test_product.handle %}
    {% endif %}
  {% endfor %}
  {% assign addon_products_list = addon_products_list | split: ',' %}
{% endunless %}

{% if addon_products_list and addon_products_list.size > 0 %}
  <div class="addon-products-container">
    <div class="addon-products-block" {{ block.shopify_attributes }}>
      <div class="addon-products-header">
        <h3 class="addon-products-title">{{ block.settings.title | default: 'השלימו את חווית השינה עם:' }}</h3>
        
        <div class="addon-slider-buttons desktop-only">
          <button class="addon-slider-prev" disabled>
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
              <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
          
          <button class="addon-slider-next">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
              <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
        </div>
      </div>
      
      <div class="addon-products-slider">
        <div class="swiper addon-products-swiper">
          <div class="swiper-wrapper">
            {% for product_handle in addon_products_list %}
              {% assign addon_product = all_products[product_handle] %}
              
              {% if addon_product and addon_product.id %}
                {% assign on_sale = false %}
                {% assign discount_percentage = 0 %}
                {% if addon_product.compare_at_price and addon_product.compare_at_price > addon_product.price %}
                  {% assign on_sale = true %}
                  {% assign discount_percentage = addon_product.compare_at_price | minus: addon_product.price | times: 100 | divided_by: addon_product.compare_at_price | round %}
                {% endif %}
                
                <div class="swiper-slide">
                  <div class="addon-product-item" data-product-id="{{ addon_product.id }}">
                    <a href="{{ addon_product.url }}" class="addon-product-image">
                      {% if addon_product.featured_image %}
                        {{ addon_product.featured_image | image_url: width: 96 | image_tag: loading: 'lazy', alt: addon_product.title }}
                      {% else %}
                        <div class="addon-no-image">
                          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                            <rect x="3" y="3" width="18" height="18" rx="2" ry="2" stroke="#ccc" stroke-width="2"/>
                            <circle cx="8.5" cy="8.5" r="1.5" stroke="#ccc" stroke-width="2"/>
                            <path d="M21 15L16 10L5 21" stroke="#ccc" stroke-width="2"/>
                          </svg>
                        </div>
                      {% endif %}
                    </a>
                    
                    <div class="addon-product-info">
                      <div class="addon-product-details">
                        <a href="{{ addon_product.url }}" class="addon-product-title">{{ addon_product.title }}</a>
                        
                        <div class="addon-product-pricing">
                          {% if on_sale %}
                            <span class="addon-discount-badge">{{ discount_percentage }}% OFF</span>
                          {% endif %}
                          
                          <div class="addon-prices">
                            <span class="addon-current-price">₪{{ addon_product.price | divided_by: 100 }}</span>
                            {% if on_sale %}
                              <span class="addon-compare-price">₪{{ addon_product.compare_at_price | divided_by: 100 }}</span>
                            {% endif %}
                          </div>
                        </div>
                      </div>
                      
                      <button class="addon-product-btn" data-product-handle="{{ addon_product.handle }}">
                        <span class="addon-btn-icon">
                          <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                            <path d="M8 3V13M3 8H13" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                          </svg>
                        </span>
                        <span class="addon-btn-text">הוסף</span>
                        <span class="addon-btn-loader" style="display: none;">
                          <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                            <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" stroke-dasharray="31.416" stroke-dashoffset="31.416">
                              <animate attributeName="stroke-dasharray" dur="2s" values="0 31.416;15.708 15.708;0 31.416" repeatCount="indefinite"/>
                              <animate attributeName="stroke-dashoffset" dur="2s" values="0;-15.708;-31.416" repeatCount="indefinite"/>
                            </circle>
                          </svg>
                        </span>
                        <span class="addon-btn-success" style="display: none;">
                          <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                            <path d="M13.5 4.5L6 12L2.5 8.5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                          </svg>
                        </span>
                      </button>
                    </div>
                  </div>
                </div>
              {% endif %}
            {% endfor %}
          </div>
        </div>
      </div>
    </div>
  </div>

  {% render 'addon-variant-popup' %}

  <style>
  .addon-product-btn {
    position: relative;
    transition: all 0.3s ease;
  }

  .addon-product-btn.loading {
    pointer-events: none;
    opacity: 0.8;
    background: #f5f5f5 !important;
    color: #666 !important;
    border-color: #ddd !important;
  }

  .addon-product-btn.success {
    background-color: #DD2D4A !important;
    color: white !important;
    border-color: #DD2D4A !important;
  }

  .addon-product-btn .addon-btn-loader svg {
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  .addon-success-message {
    position: fixed;
    top: 20px;
    right: 20px;
    background: white;
    color: #DD2D4A;
    border: 1px solid #DD2D4A;
    padding: 12px 16px;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(221, 45, 74, 0.15);
    z-index: 10000;
    transform: translateX(100%);
    transition: transform 0.3s ease;
    display: flex;
    align-items: center;
    gap: 8px;
    font-weight: 500;
    font-size: 14px;
  }

  .addon-success-message.show {
    transform: translateX(0);
  }

  .addon-success-message svg {
    color: #DD2D4A;
  }

  @media (max-width: 768px) {
    .addon-success-message {
      top: 10px;
      right: 10px;
      left: 10px;
      transform: translateY(-100%);
      text-align: center;
      justify-content: center;
    }

    .addon-success-message.show {
      transform: translateY(0);
    }
  }
  </style>

  <script>
  document.addEventListener('DOMContentLoaded', function() {
    const addonBlock = document.querySelector('.addon-products-block');
    if (!addonBlock) return;

    const prevBtn = addonBlock.querySelector('.addon-slider-prev');
    const nextBtn = addonBlock.querySelector('.addon-slider-next');
    let addonSwiper = null;

    if (document.querySelector('.addon-products-swiper')) {
      const isMobile = window.innerWidth <= 768;
      
      addonSwiper = new Swiper('.addon-products-swiper', {
        slidesPerView: isMobile ? 'auto' : 1,
        spaceBetween: isMobile ? 6 : 0,
        loop: false,
        allowTouchMove: true,
        watchOverflow: true,
        centeredSlides: false,
        freeMode: isMobile ? {
          enabled: true,
          sticky: false,
        } : false,
        breakpoints: {
          320: {
            slidesPerView: 'auto',
            spaceBetween: 6,
            freeMode: {
              enabled: true,
              sticky: false,
            }
          },
          360: {
            slidesPerView: 'auto',
            spaceBetween: 6,
            freeMode: {
              enabled: true,
              sticky: false,
            }
          },
          768: {
            slidesPerView: 1,
            spaceBetween: 0,
            freeMode: false
          }
        },
        on: {
          init: function() {
            updateSliderButtons();
          },
          slideChange: function() {
            updateSliderButtons();
          }
        }
      });

      function updateSliderButtons() {
        if (!addonSwiper || !prevBtn || !nextBtn) return;
        
        prevBtn.disabled = addonSwiper.isBeginning;
        nextBtn.disabled = addonSwiper.isEnd;
      }

      if (prevBtn) {
        prevBtn.addEventListener('click', function() {
          if (addonSwiper && !this.disabled) {
            addonSwiper.slidePrev();
          }
        });
      }

      if (nextBtn) {
        nextBtn.addEventListener('click', function() {
          if (addonSwiper && !this.disabled) {
            addonSwiper.slideNext();
          }
        });
      }

      window.addEventListener('resize', function() {
        const isMobileNow = window.innerWidth <= 768;
        if (addonSwiper) {
          if (isMobileNow) {
            addonSwiper.params.slidesPerView = 'auto';
            addonSwiper.params.spaceBetween = 6;
            addonSwiper.params.freeMode = {
              enabled: true,
              sticky: false,
            };
          } else {
            addonSwiper.params.slidesPerView = 1;
            addonSwiper.params.spaceBetween = 0;
            addonSwiper.params.freeMode = false;
          }
          addonSwiper.update();
          updateSliderButtons();
        }
      });

      updateSliderButtons();
    }

    const addonButtons = document.querySelectorAll('.addon-product-btn');
    
    addonButtons.forEach(button => {
      button.addEventListener('click', async function(e) {
        e.preventDefault();
        const productHandle = this.dataset.productHandle;
        await loadProductData(productHandle, this);
      });
    });

    function showButtonLoading(button) {
      button.classList.add('loading');
      button.querySelector('.addon-btn-icon').style.display = 'none';
      button.querySelector('.addon-btn-text').textContent = 'מוסיף...';
      button.querySelector('.addon-btn-loader').style.display = 'inline-block';
    }

    function showButtonSuccess(button, productTitle) {
      button.classList.remove('loading');
      button.classList.add('success');
      button.querySelector('.addon-btn-loader').style.display = 'none';
      button.querySelector('.addon-btn-icon').style.display = 'none';
      button.querySelector('.addon-btn-success').style.display = 'inline-block';
      button.querySelector('.addon-btn-text').textContent = 'נוסף';
      
      setTimeout(() => {
        resetButton(button);
      }, 2500);
    }

    function resetButton(button) {
      button.classList.remove('loading', 'success');
      button.querySelector('.addon-btn-icon').style.display = 'inline-block';
      button.querySelector('.addon-btn-loader').style.display = 'none';
      button.querySelector('.addon-btn-success').style.display = 'none';
      button.querySelector('.addon-btn-text').textContent = 'הוסף';
    }

    function showSuccessMessage(productTitle) {
      // Removed - no more toast notifications
    }

    async function loadProductData(handle, button) {
      try {
        showButtonLoading(button);
        
        const response = await fetch(`/products/${handle}.js`);
        const product = await response.json();
        
        if (product.variants.length === 1) {
          await addToCart(product.variants[0], product.title, button);
        } else {
          resetButton(button);
          window.addonVariantPopup.showPopup(product, button);
        }
      } catch (error) {
        console.error('Error loading product:', error);
        resetButton(button);
      }
    }

    async function addToCart(variant, productTitle, button) {
      if (!variant) return;
      
      try {
        if (window.cartDrawer && window.cartDrawer.addItem) {
          const success = await window.cartDrawer.addItem(variant.id, 1);
          if (success) {
            showButtonSuccess(button, productTitle);
            if (window.addonVariantPopup) {
              window.addonVariantPopup.closePopup();
            }
          } else {
            resetButton(button);
          }
        }
      } catch (error) {
        console.error('Error adding to cart:', error);
        resetButton(button);
      }
    }

    // Expose addToCart function globally for variant popup
    window.addonAddToCart = addToCart;

    function waitForCartDrawer() {
      if (window.cartDrawer && window.cartDrawer.updateUI) {
        window.cartDrawer.loadCart();
      } else {
        setTimeout(waitForCartDrawer, 100);
      }
    }
    
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', waitForCartDrawer);
    } else {
      waitForCartDrawer();
    }
  });
  </script>
{% endif %}